@page "/reservations"

@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Administrator, User")]
@inject Autoberles.Data.MyDbContext DB
@layout Autoberles.Components.Layout.DBLayOut

@rendermode InteractiveServer

<AuthorizeView Roles="Administrator">
    <Authorized>
        <PageTitle>Foglalások</PageTitle>
        <h1>Foglalások</h1>
        <hr />
        <a href="/newReservation" class="btn btn-primary">Új foglalás</a>
        @if(isThereOlder) {
            <a href="/oldReservations" class="btn btn-primary">Előző foglalások</a>
        }
    </Authorized>
</AuthorizeView>

<AuthorizeView Roles="User">
    <Authorized>
        <PageTitle>Foglalásaim</PageTitle>
        <h1>Foglalásaim</h1>
        <hr />
        <a href="/newReservation" class="btn btn-primary">Új foglalás</a>
        @if(isThereOlder) {
            @foreach(var elem in viewReservations) {
                if(elem.Username == context.User.Identity.Name) {
                    isThereOlderFromUser = true;
                }
            }
        }
        @if(isThereOlderFromUser) {
            <a href="/oldReservations" class="btn btn-primary">Előző foglalásaim</a>
        }
    </Authorized>
</AuthorizeView>

@if(DB.Reservation is null || DB.User is null || DB.Car is null) {
    <p>Betöltés...</p>
} else {
    <AuthorizeView Roles="Administrator">
        <Authorized>
            <QuickGrid Class="table" Items="@viewReservations.AsQueryable().Where(reservation=> (DateTime.Compare(reservation.EndDate,DateTime.Now)>=0)&&(reservation.Username.Contains(usernameFilter))&&(reservation.RegistrationNumber.Contains(registrationNumberFilter)))" Pagination="state">
                <PropertyColumn Title="Felhasználónév" Property="reservation => reservation.Username" Sortable="true" >
                    <ColumnOptions>
                        <div class="search-box">
                            <input type="search" autofocus @bind="usernameFilter" @bind:event="oninput" placeholder="Felhasználónév..." />
                        </div>
                    </ColumnOptions>
                </PropertyColumn>
                <PropertyColumn Title="Autó rendszáma" Property="reservation => reservation.RegistrationNumber" Sortable="true" >
                    <ColumnOptions>
                        <div class="search-box">
                            <input type="search" autofocus @bind="registrationNumberFilter" @bind:event="oninput" placeholder="Rendszám..." />
                        </div>
                    </ColumnOptions>
                </PropertyColumn>
                <PropertyColumn Title="Foglalás kezdete" Property="reservation => reservation.StartDate" Format="yyyy. MM. dd." Sortable="true" />
                <PropertyColumn Title="Foglalás vége" Property="reservation => reservation.EndDate" Format="yyyy. MM. dd." Sortable="true" />
                <TemplateColumn Context="reservation" Title="Törlés">
                    <a href="@($"deleteReservation?Id={reservation.ReservationID}")" class="btn btn-danger">Törlés</a>
                </TemplateColumn>
            </QuickGrid>
            <Paginator State="state" />
        </Authorized>
    </AuthorizeView>

    <AuthorizeView Roles="User">
        <Authorized>
            <QuickGrid Class="table" Items="@viewReservations.AsQueryable().Where(reservation => ((reservation.Username==context.User.Identity.Name) && (DateTime.Compare(reservation.EndDate,DateTime.Now)>=0)) &&(reservation.RegistrationNumber.Contains(registrationNumberFilter)))" Pagination="state">
                <PropertyColumn Title="Autó rendszáma" Property="reservation => reservation.RegistrationNumber" Sortable="true" >
                    <ColumnOptions>
                        <div class="search-box">
                            <input type="search" autofocus @bind="registrationNumberFilter" @bind:event="oninput" placeholder="Rendszám..." />
                        </div>
                    </ColumnOptions>
                </PropertyColumn>
                <PropertyColumn Title="Foglalás kezdete" Property="reservation => reservation.StartDate" Format="yyyy. MM. dd." Sortable="true" />
                <PropertyColumn Title="Foglalás vége" Property="reservation => reservation.EndDate" Format="yyyy. MM. dd." Sortable="true" />
                <TemplateColumn Context="reservation" Title="Szerkesztés">
                    <a href="@($"deleteReservation?Id={reservation.ReservationID}")" class="btn btn-danger">Törlés</a>
                </TemplateColumn>
            </QuickGrid>
            <Paginator State="state" />
        </Authorized>
    </AuthorizeView>
}

@code {
    public class ViewReservation {
        public int ReservationID { get; set; }
        public int CarID { get; set; }
        public string RegistrationNumber { get; set; }
        public int UserID { get; set; }
        public string Username { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
    }

    public string usernameFilter = "";
    public string registrationNumberFilter = "";

    List<ViewReservation> viewReservations = new List<ViewReservation>();

    PaginationState state = new PaginationState { ItemsPerPage = 10 };

    bool isThereOlder = false;
    bool isThereOlderFromUser = false;

    protected override async Task OnInitializedAsync() {
        foreach(Reservation res in DB.Reservation) {
            ViewReservation tempVR = new ViewReservation();

            tempVR.ReservationID = res.ReservationID;
            tempVR.CarID = res.CarID;
            tempVR.UserID = res.UserID;
            tempVR.StartDate = res.StartDate;
            tempVR.EndDate = res.EndDate;
            viewReservations.Add(tempVR);
        }

        foreach(User user in DB.User)
            for(int i = 0;i < viewReservations.Count;i++)
                if(user.UserID == viewReservations[i].UserID)
                    viewReservations[i].Username = user.Username;

        foreach(Car car in DB.Car) {
            for(int i = 0;i < viewReservations.Count;i++)
                if(car.CarID == viewReservations[i].CarID)
                    viewReservations[i].RegistrationNumber = car.RegistrationNumber;
        }


        foreach(var elem in viewReservations) {
            if(DateTime.Compare(elem.EndDate, DateTime.Now) < 0){
                isThereOlder = true;
            }
        }
    }
}


